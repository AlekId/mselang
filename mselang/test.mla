{ MSEgui Copyright (c) 2014 by Martin Schreiber

    See the file COPYING.MSE, included in this distribution,
    for details about the copyright.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
}
unit __mla__compilerunit;
interface 

type
 ppointer = ^pointer;
procedure __mla__decrefsize(const ref: ppointer);
procedure __mla__finirefsize(const ref: ppointer);

implementation
{
procedure __mla__decrefsize(const ref: ppointer);
begin
end;

procedure __mla__finirefsize(const ref: ppointer);
begin
end;
}

type             //todo: use "internaltypes"
 refcountty = int32;
 managedsizety = int32;
 stringsizety = managedsizety;
 pstringsizety = ^stringsizety;
 dynarraysizety = managedsizety;
 pdynarraysizety = ^dynarraysizety;
 
 refinfoty = record
  count: refcountty;
 end;
 prefinfoty = ^refinfoty;
 refsizeinfoty = record
  ref: refinfoty;
  sizedummy: managedsizety;
 end;
 prefsizeinfoty = ^refsizeinfoty;

{ 
 string8headerty = record
  ref: refinfoty;
  len: stringsizety;
 end; //following stringdata + terminating #0
 pstring8headerty = ^string8headerty;

 dynarrayheaderty = record
  ref: refinfoty;
  len: dynarraysizety;
 end; //following array datat
 pdynarrayheaderty = ^dynarrayheaderty;
 
const
 string8headersize = sizeof(string8headerty);
 string8allocsize = string8headersize+1; //terminating #0
 dynarrayheadersize = sizeof(dynarrayheaderty);
 dynarrayallocsize = dynarrayheadersize;
}

var
 d: prefsizeinfoty;
begin
 if d^.ref.count > 0 then begin
 end;
end;

end.

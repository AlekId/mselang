program classmethod1;
uses
 __mla__internaltypes;
type
 testclaty = class of ttest;
 ttest = class()[virtual]
  fa,fb: int32;
  constructor create();
  destructor destroy();
  class method test();
  method test1();
 end;
 procty = method();
var
 inst,classdef: pointer;

constructor ttest.create();
begin
end;

destructor ttest.destroy();
begin
end;

method ttest.test1();
begin
 inst:= self;
end;

class method ttest.test();
begin
 classdef:= self;
end;

var
 c1: testclaty;
 c2: ttest;
 p1: procty;
begin
 p1:= @ttest.test;
 ttest.test();
 if (methodty(p1).data = classdef) and (classdef <> nil) and (classdef <> pointer(1)) then
  classdef:= pointer(1);
  c1:= ttest;
  p1:= @c1.test;
  c1.test;
  if (methodty(p1).data = classdef) and (classdef <> nil) and (classdef <> pointer(1)) then
   inst:= pointer(1);
   c2:= ttest.create();
   p1:= @c2.test1;
   c2.test1();
   if (methodty(p1).data = inst) and (inst <> nil) and (inst <> pointer(1)) and (inst = c2) then
    inst:= pointer(1);
    p1();
    if (methodty(p1).data = inst) and (inst <> nil) and (inst <> pointer(1)) and (inst = c2) then
     exitcode:= 123;
    end;
   end;
   c2.destroy();
  end;
 end;
end.
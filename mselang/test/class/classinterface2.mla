program classinterface2;

type
 itest = interface
  function test1(a,b: int32): int32;
  procedure test2(a,b: int32);
 end;

 tc = class
 end;

 tcla = class(tc,itest)
  private
   f: int32;
  public
   constructor create();
   destructor destroy();
   function test1(a,b: int32): int32 virtual;
   procedure test2(a,b: int32) virtual;
 end;

 tcla2 = class(tcla)
  public
   function test1(a,b: int32): int32 override;
   procedure test2(a,b: int32) override;
 end;

constructor tcla.create();
begin
 f:= 3;
end;

destructor tcla.destroy();
begin
end;

function tcla.test1(a,b: int32): int32;
begin
 result:= 11;
end;

procedure tcla.test2(a,b: int32);
begin
 exitcode:= 11;
end;

function tcla2.test1(a,b: int32): int32;
begin
 result:= a+b+f;//inherited test(a,b);
end;

procedure tcla2.test2(a,b: int32);
begin
 exitcode:= a+b+f;//inherited test(a,b);
end;

var
 i1: itest;
 c1: tcla;
begin
 c1:= tcla2.create();
 i1:= itest(c1);
 exitcode:= i1.test1(100,19);
 if exitcode = 122 then begin
  i1.test2(100,20);
 end;
 c1.destroy();
end.

//rtl_exceptions
{ MSEpas Copyright (c) 2017 by Martin Schreiber

    See the file COPYING.MSE, included in this distribution,
    for details about the copyright.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
}
unit rtl_exceptions;
interface
uses
 rtl_base;
type
 texception = class(tbase)[except]
  constructor create(const message: string8);
  constructor createfmt(const msg: string8; const args : array of const);
  destructor destroy()[virtual,default];
  property message: string8 read fmessage write fmessage;

  protected
   fmessage: string8;
 end;

implementation
uses
 rtl_format;
 
constructor texception.create(const message: string8);
begin
 fmessage:= message;
end;

constructor texception.createfmt(const msg: string8;
                                           const args : array of const);
begin
{$internaldebug on}
 create(
 format(msg,args));
end;

destructor texception.destroy();
begin
 //dummy
end;

end.

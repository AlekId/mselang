{ MSElang Copyright (c) 2013-2014 by Martin Schreiber
   
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
}

 ssatable: ssatablety = (
  nonessa,
  nopssa,

  labelssa,          //controlops
  ifssa,
  whilessa,
  untilssa,
  decloop32ssa,
  decloop64ssa,
  raisessa,

  beginparsessa,
  mainssa,
  progendssa,  
  endparsessa,

  movesegreg0ssa,
  moveframereg0ssa,
  popreg0ssa,
  increg0ssa,

  gotossa,
  cmpjmpneimm4ssa,
  cmpjmpeqimm4ssa,
  cmpjmploimm4ssa,
  cmpjmpgtimm4ssa,
  cmpjmploeqimm4ssa,

  writelnssa,
  writebooleanssa,
  writeintegerssa,
  writefloatssa,
  writestring8ssa,
  writepointerssa,
  writeclassssa,
  writeenumssa,

  pushssa,
  popssa,

  pushimm1ssa,
  pushimm8ssa,
  pushimm16ssa,
  pushimm32ssa,
  pushimm64ssa,
  pushimmdatakindssa,
  
  int32toflo64ssa,
  potoint32ssa,
  inttopossa,
  
  negcard32ssa,
  negint32ssa,
  negflo64ssa,

  mulint32ssa,
  mulflo64ssa,
  addint32ssa,
  subint32ssa,
  addpoint32ssa,
  subpossa,
  addflo64ssa,
  subflo64ssa,

  addimmint32ssa,
  mulimmint32ssa,
  offsetpoimm32ssa,

  incdecsegimmint32ssa,
  incdecsegimmpo32ssa,

  incdeclocimmint32ssa,
  incdeclocimmpo32ssa,

  incdecparimmint32ssa,
  incdecparimmpo32ssa,

  incdecparindiimmint32ssa,
  incdecparindiimmpo32ssa,

  incdecindiimmint32ssa,
  incdecindiimmpo32ssa,

  cmpeqpossa,
  cmpeqboolssa,
  cmpeqint32ssa,
  cmpeqflo64ssa,

  cmpnepossa,
  cmpneboolssa,
  cmpneint32ssa,
  cmpneflo64ssa,

  cmpgtpossa,
  cmpgtboolssa,
  cmpgtint32ssa,
  cmpgtflo64ssa,

  cmpltpossa,
  cmpltboolssa,
  cmpltint32ssa,
  cmpltflo64ssa,

  cmpgspossa,
  cmpgsboolssa,
  cmpgsint32ssa,
  cmpgsflo64ssa,

  cmplspossa,
  cmplsboolssa,
  cmplsint32ssa,
  cmplsflo64ssa,

  storesegnilssa,
  storereg0nilssa,
  storeframenilssa,
  storestacknilssa,
  storestackrefnilssa,
  storesegnilarssa,
  storeframenilarssa,
  storereg0nilarssa,
  storestacknilarssa,
  storestackrefnilarssa,

  finirefsizesegssa,
  finirefsizeframessa,
  finirefsizereg0ssa,
  finirefsizestackssa,
  finirefsizestackrefssa,
  finirefsizeframearssa,
  finirefsizesegarssa,
  finirefsizereg0arssa,
  finirefsizestackarssa,
  finirefsizestackrefarssa,

  increfsizesegssa,
  increfsizeframessa,
  increfsizereg0ssa,
  increfsizestackssa,
  increfsizestackrefssa,
  increfsizeframearssa,
  increfsizesegarssa,
  increfsizereg0arssa,
  increfsizestackarssa,
  increfsizestackrefarssa,

  decrefsizesegssa,
  decrefsizeframessa,
  decrefsizereg0ssa,
  decrefsizestackssa,
  decrefsizestackrefssa,
  decrefsizeframearssa,
  decrefsizesegarssa,
  decrefsizereg0arssa,
  decrefsizestackarssa,
  decrefsizestackrefarssa,

  popseg8ssa,
  popseg16ssa,
  popseg32ssa,
  popseg64ssa,
  popsegpossa,
  popsegf16ssa,
  popsegf32ssa,
  popsegf64ssa,
  popsegssa,

  poploc8ssa,
  poploc16ssa,
  poploc32ssa,
  poploc64ssa,
  poplocpossa,
  poplocf16ssa,
  poplocf32ssa,
  poplocf64ssa,
  poplocssa,

  poplocindi8ssa,
  poplocindi16ssa,
  poplocindi32ssa,
  poplocindi64ssa,
  poplocindipossa,
  poplocindif16ssa,
  poplocindif32ssa,
  poplocindif64ssa,
  poplocindissa,

  poppar8ssa,
  poppar16ssa,
  poppar32ssa,
  poppar64ssa,
  popparpossa,
  popparf16ssa,
  popparf32ssa,
  popparf64ssa,
  popparssa,

  popparindi8ssa,
  popparindi16ssa,
  popparindi32ssa,
  popparindi64ssa,
  popparindipossa,
  popparindif16ssa,
  popparindif32ssa,
  popparindif64ssa,
  popparindissa,

  pushnilssa,
//  pushsegaddressssa,

  pushseg8ssa,
  pushseg16ssa,
  pushseg32ssa,
  pushseg64ssa,
  pushsegpossa,
  pushsegf16ssa,
  pushsegf32ssa,
  pushsegf64ssa,
  pushsegssa,

  pushloc8ssa,
  pushloc16ssa,
  pushloc32ssa,
  pushloc64ssa,
  pushlocpossa,
  pushlocf16ssa,
  pushlocf32ssa,
  pushlocf64ssa,
  pushlocssa,

  pushlocindi8ssa,
  pushlocindi16ssa,
  pushlocindi32ssa,
  pushlocindi64ssa,
  pushlocindipossa,
  pushlocindi16ssa,
  pushlocindi32ssa,
  pushlocindi64ssa,
  pushlocindissa,

  pushpar8ssa,
  pushpar16ssa,
  pushpar32ssa,
  pushpar64ssa,
  pushparpossa,
  pushparf16ssa,
  pushparf32ssa,
  pushparf64ssa,
  pushparssa,

  pushaddrssa,
  pushlocaddrssa,
//  pushlocaddrindissa,
  pushsegaddrssa,
//  pushsegaddrindissa,
  pushstackaddrssa,
//  pushstackaddrindissa,
  
  pushduppossa,

  indirect8ssa,
  indirect16ssa,
  indirect32ssa,
  indirect64ssa,
  indirectpossa,
  indirectf16ssa,
  indirectf32ssa,
  indirectf64ssa,
  indirectpooffsssa,
  indirectoffspossa,
  indirectssa,

  popindirect8ssa,
  popindirect16ssa,
  popindirect32ssa,
  popindirect64ssa,
  popindirectpossa,
  popindirectf16ssa,
  popindirectf32ssa,
  popindirectf64ssa,
  popindirectssa,

  callssa,
  callfuncssa,
  calloutssa,
  callfuncoutssa,
  callvirtssa,
  callintfssa,
  virttrampolinessa,

  callindissa,
  callfuncindissa,

  locvarpushssa,
  locvarpopssa,

  subbeginssa,
  subendssa,
  externalsubssa,
  returnssa,
  returnfuncssa,

  initclassssa,
  destroyclassssa,

  setlengthstr8ssa,
  setlengthdynarrayssa,

  pushcpucontextssa,
  popcpucontextssa,
  finiexceptionssa,
  continueexceptionssa,
  getmemssa,
  getzeromemssa,
  freememssa,
  setmemssa,
  lineinfossa,

//ssaonly
  nestedvarssa,
  popnestedvarssa,
//  popsegaggregatessa,
  pushnestedvarssa,
  aggregatessa,
  allocssa,
  nestedcalloutssa,
  hascalloutssa,
  pushsegaddrnilssa,
  pushsegaddrglobvarssa,
  pushsegaddrglobconstssa,
  pushsegaddrclassdefssa
 );

 optable: optablety = ( //order as opcodety
  nil,  //oc_none
  @nopop,

  @labelop,       //comtrolops
  @ifop,
  @whileop,
  @untilop,
  @decloop32op,
  @decloop64op,
  @raiseop,

  @beginparseop,
  @mainop,
  @progendop,  
  @endparseop,

  @movesegreg0op,
  @moveframereg0op,
  @popreg0op,
  @increg0op,

  @gotoop,
  @cmpjmpneimm4op,
  @cmpjmpeqimm4op,
  @cmpjmploimm4op,
  @cmpjmpgtimm4op,
  @cmpjmploeqimm4op,

  @writelnop,
  @writebooleanop,
  @writeintegerop,
  @writefloatop,
  @writestring8op,
  @writepointerop,
  @writeclassop,
  @writeenumop,

  @pushop,
  @popop,

  @pushimm1op,
  @pushimm8op,
  @pushimm16op,
  @pushimm32op,
  @pushimm64op,
  @pushimmdatakindop,
  
  @int32toflo64op,
  @potoint32op,
  @inttopoop,
  
  @negcard32op,
  @negint32op,
  @negflo64op,

  @mulint32op,
  @mulflo64op,
  @addint32op,
  @subint32op,
  @addpoint32op,
  @subpoop,
  @addflo64op,
  @subflo64op,

  @addimmint32op,
  @mulimmint32op,
  @offsetpoimm32op,

  @incdecsegimmint32op,
  @incdecsegimmpo32op,

  @incdeclocimmint32op,
  @incdeclocimmpo32op,

  @incdecparimmint32op,
  @incdecparimmpo32op,

  @incdecparindiimmint32op,
  @incdecparindiimmpo32op,

  @incdecindiimmint32op,
  @incdecindiimmpo32op,

  @cmpeqpoop,
  @cmpeqboolop,
  @cmpeqint32op,
  @cmpeqflo64op,

  @cmpnepoop,
  @cmpneboolop,
  @cmpneint32op,
  @cmpneflo64op,

  @cmpgtpoop,
  @cmpgtboolop,
  @cmpgtint32op,
  @cmpgtflo64op,

  @cmpltpoop,
  @cmpltboolop,
  @cmpltint32op,
  @cmpltflo64op,

  @cmpgepoop,
  @cmpgeboolop,
  @cmpgeint32op,
  @cmpgeflo64op,

  @cmplepoop,
  @cmpleboolop,
  @cmpleint32op,
  @cmpleflo64op,

  @storesegnilop,
  @storereg0nilop,
  @storeframenilop,
  @storestacknilop,
  @storestackrefnilop,
  @storesegnilarop,
  @storeframenilarop,
  @storereg0nilarop,
  @storestacknilarop,
  @storestackrefnilarop,

  @finirefsizesegop,
  @finirefsizeframeop,
  @finirefsizereg0op,
  @finirefsizestackop,
  @finirefsizestackrefop,
  @finirefsizeframearop,
  @finirefsizesegarop,
  @finirefsizereg0arop,
  @finirefsizestackarop,
  @finirefsizestackrefarop,

  @increfsizesegop,
  @increfsizeframeop,
  @increfsizereg0op,
  @increfsizestackop,
  @increfsizestackrefop,
  @increfsizeframearop,
  @increfsizesegarop,
  @increfsizereg0arop,
  @increfsizestackarop,
  @increfsizestackrefarop,

  @decrefsizesegop,
  @decrefsizeframeop,
  @decrefsizereg0op,
  @decrefsizestackop,
  @decrefsizestackrefop,
  @decrefsizeframearop,
  @decrefsizesegarop,
  @decrefsizereg0arop,
  @decrefsizestackarop,
  @decrefsizestackrefarop,

  @popseg8op,
  @popseg16op,
  @popseg32op,
  @popseg64op,
  @popsegpoop,
  @popsegf16op,
  @popsegf32op,
  @popsegf64op,
  @popsegop,

  @poploc8op,
  @poploc16op,
  @poploc32op,
  @poploc64op,
  @poplocpoop,
  @poplocf16op,
  @poplocf32op,
  @poplocf64op,
  @poplocop,

  @poplocindi8op,
  @poplocindi16op,
  @poplocindi32op,
  @poplocindi64op,
  @poplocindipoop,
  @poplocindif16op,
  @poplocindif32op,
  @poplocindif64op,
  @poplocindiop,

  @poppar8op,
  @poppar16op,
  @poppar32op,
  @poppar64op,
  @popparpoop,
  @popparf16op,
  @popparf32op,
  @popparf64op,
  @popparop,

  @popparindi8op,
  @popparindi16op,
  @popparindi32op,
  @popparindi64op,
  @popparindipoop,
  @popparindif16op,
  @popparindif32op,
  @popparindif64op,
  @popparindiop,

  @pushnilop,
//  @pushsegaddressop,

  @pushseg8op,
  @pushseg16op,
  @pushseg32op,
  @pushseg64op,
  @pushsegpoop,
  @pushsegf16op,
  @pushsegf32op,
  @pushsegf64op,
  @pushsegop,

  @pushloc8op,
  @pushloc16op,
  @pushloc32op,
  @pushloc64op,
  @pushlocpoop,
  @pushlocf16op,
  @pushlocf32op,
  @pushlocf64op,
  @pushlocop,

  @pushlocindi8op,
  @pushlocindi16op,
  @pushlocindi32op,
  @pushlocindi64op,
  @pushlocindipoop,
  @pushlocindif16op,
  @pushlocindif32op,
  @pushlocindif64op,
  @pushlocindiop,

  @pushpar8op,
  @pushpar16op,
  @pushpar32op,
  @pushpar64op,
  @pushparpoop,
  @pushparf16op,
  @pushparf32op,
  @pushparf64op,
  @pushparop,

  @pushaddrop,
  @pushlocaddrop,
//  @pushlocaddrindiop,
  @pushsegaddrop,
//  @pushsegaddrindiop,
  @pushstackaddrop,
//  @pushstackaddrindiop,
  
  @pushduppoop,

  @indirect8op,
  @indirect16op,
  @indirect32op,
  @indirect64op,
  @indirectpoop,
  @indirectf16op,
  @indirectf32op,
  @indirectf64op,
  @indirectpooffsop, //offset after indirect
  @indirectoffspoop, //offset before indirect
  @indirectop,

  @popindirect8op,
  @popindirect16op,
  @popindirect32op,
  @popindirect64op,
  @popindirectpoop,
  @popindirectf16op,
  @popindirectf32op,
  @popindirectf64op,
  @popindirectop,

  @callop,
  @callfuncop,
  @calloutop,
  @callfuncoutop,
  @callvirtop,
  @callintfop,
  @virttrampolineop,

  @callindiop,
  @callfuncindiop,

  @locvarpushop,
  @locvarpopop,

  @subbeginop,
  @subendop,
  @externalsubop,
  @returnop,
  @returnfuncop,

  @initclassop,
  @destroyclassop,

  @setlengthstr8op,
  @setlengthdynarrayop,

  @pushcpucontextop,
  @popcpucontextop,
  @finiexceptionop,
  @continueexceptionop,

  @getmemop,
  @getzeromemop,
  @freememop,
  @setmemop,
 
  @lineinfoop,
   
   //ssa only
  nil,
  nil,
  nil,
  nil,
  nil,
  nil,
  nil,
  
  nil,
  nil,
  nil,
  nil
 );

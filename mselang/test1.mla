program untyped;
{$internaldebug on}

type
 ppint32 = ^^int32;
(*
function comparestring(constref l,r: int32{: flo64}): int32;
//{$dumpelements}
begin
// exitcode:= int32(l) + int32(r);
// exitcode:= ppint32(l)^^+ppint32(r)^^
end;
*)

function test1(p0,p1: {array of} int32): int32;
begin
// result:= p[0]+p[1];
 result:= p0+p1;
end;

function test2(const p: int32): int32;
begin
 result:= 2*p;
end;
{
procedure test2(const p: int32);
begin
 exitcode:= 2*p;
end;
}
var
 p1,p2: pointer;
 i1,i2: int32;
begin

 i1:= 100;
// i2:= 23;
{
 p1:= @i1;
 p2:= @i2;
 comparestring(@p1,@p2)
}
// exitcode:= test2(test1([i1,23]));//);
// exitcode:= test2(test1(i1,23);
 exitcode:= test2(test1(i1,23);
// comparestring(100,23)
// comparestring(i1,i2);
// comparestring(100.0,23.0);
end.

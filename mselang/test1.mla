program except1;
uses
 __mla__compilerunit;
type
 ppointer = ^pointer;
 cla1 = class()[virtual]
  constructor create();
  destructor destroy();
 end;

constructor cla1.create();
begin
end;

destructor cla1.destroy();
begin
end;
{
procedure __mla__getclassdef(const instance: pointer;
                          const virttaboffset: int32): pointer;
begin
writeln(instance);
 result:= instance;
 if instance <> nil then
  result:= ppointer(instance+virttaboffset)^;
 end;
end;
}
var
 c1: cla1;
 p1: pointer;
begin
 c1:= cla1.create();
 p1:= __mla__getclassdef(pointer(c1),0);
 writeln(c1,' ',p1);
end.
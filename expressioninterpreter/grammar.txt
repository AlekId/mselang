@whitespace
 ' ',#$0d,#$0a
@keywordstart
 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p'
 'q','r','s','t','u','v','w','x','y','z'
 'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P'
 'Q','R','S','T','U','V','W','X','Y','Z'
@identstart
 '_',@keywordstart
@num
 '0','1','2','3','4','5','6','7','8','9'
msehandler
main,main1,handlemain
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 'procedure'.,procedure0-*
 'begin'.,progbegin-
 'const'.,const-*
 'var'.,var-*
comment0,,*
 '}',comment1-
 '',
comment1,,*
linecomment0,,*
 #$0a,linecomment1-
 '',
linecomment1,,*
main1,main,handlemain1
progbegin,progblock,handleprogbegin
progblock,,
 '',statementblock-^*
paramsdef0,,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 '(',paramsdef1-
paramsdef1,paramsdef2,
 '',paramdef0^*
paramsdef2,,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 ';',paramsdef1-
 ')',paramsdef3-
paramsdef3,,^
paramdef0,paramdef1,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 @identstart,ident^*
paramdef1,,*
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 ':',paramdef2
paramdef2,,^
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 @identstart,ident^*
procedure0,procedure1,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 @identstart,ident^*
procedure1,procedure2,
 '',paramsdef0^*
procedure2,,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 ';',procedure3-
procedure3,procedure4,handleprocedure3
procedure4,checkterminator,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 'begin'.,procedure5
 'const'.,const-*
 'var'.,var-*
procedure5,procedure6,
 '',statementblock-^*
procedure6,checkterminator,handleprocedure6
# return
checkterminator,,
 ';',terminatorok-
terminatorok,,*
exeblock,exeblock,*
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 ';',
 'end'.,-*
 'if'.,if-*
 @identstart,statement0*
statementstack,,^
 '',statement*
statement,simplestatement,handlestatement
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 'begin'.,statementblock-^*
 'end'.,endcontext
 'if'.,if-
endcontext,,
endtoken,,handleendtoken^*
simplestatement,,*
 '',statement0*
statementblock,statementblock1,
 '',statement*
statementblock1,statementblock,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 ';',
 'end'.,endtoken-
statement0,statement1,
 '',ident^*
statement1,checkproc,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 ':=',assignment
checkproc,,handlecheckproc
 '',checkparams^*
assignment,,handleassignment
 '',exp^*
if,then,handleif
 '',exp^*
then,,handlethen
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 'then'.,then0-
then0,then1,handlethen0
then1,then2,handlethen1
 '',statementstack^*!
then2,,handlethen2
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 'else'.,else0-
else0,else,handleelse0
else,,handleelse
 '',statementstack^*!
const,,handleconst
 '',const0*^
const0,const1,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 @identstart,ident^*
const1,,+
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 '=',const2-
const2,const3,
 '',exp^*
const3,const0-,handleconst3
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 ';',statementend-*
var,,handlevar
 '',var0*^
var0,var1,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 @identstart,ident^*
var1,,+
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 ':',var2-
var2,var3,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 @identstart,ident^*
var3,var0-,handlevar3
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 ';',statementend-*
#
statementend,,handlestatementend!
exp,exp1,
 '',simpexp*
exp1,,handleexp^
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 '=',equsimpexp*
equsimpexp,,handleequsimpexp
 '',simpexp*
simpexp,simpexp1,handlesimpexp
 '',term*
simpexp1,simpexp1,handlesimpexp1
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 '+',addterm*
addterm,,handleaddterm
 '',term*
term,term1,handleterm
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 '+',
 '-',negterm*
 '(',bracketstart*
 @num,num*
 @identstart,valueidentifier*
term1,term1,handleterm1
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 '*',mulfact*
negterm,term,handlenegterm
mulfact,,handlemulfact
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 '+',
 '-',negterm*
 '(',bracketstart*
 @num,num*
num0,,dummyhandler
 @num,num*
 ' ',
num,,handledecnum
 @num,
 '.',frac*
frac,,handlefrac
 @num,
 'e','E',exponent*
ident,,handleident^
 @identstart,@num,
identpath,identpath1,
 @identstart,@num,
identpath1,,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 '.',identpath2
identpath2,,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 @identstart,identpath*
valueidentifier,checkvalueparams,handlevalueidentifier
 '',ident^*
#
checkvalueparams,,handlevalueidentifier
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 '(',params0-^*
checkparams,,^
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 '(',params0-
params0,params1,
 '',exp^*
params1,,
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
 ',',params0-
 ')',paramsend-
paramsend,,^
#
bracketstart,bracketend,dummyhandler
 '',simpexp*
bracketend,,handlebracketend
 @whitespace,
 '{',comment0-*
 '//',linecomment0-*
exponent,,handleexponent
 '+',
 '-',negexponent*
 @num,num*
negexponent,,handlenegexponent
 @num,num*
